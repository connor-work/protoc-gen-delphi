language: csharp
mono: none
dotnet: 3.1.401
addons:
    apt:
        packages:
            - powershell
    homebrew:
        update: true
        brewfile: true

os: linux
dist: xenial

before_install:
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install dotnetcore-sdk; fi

before_script:
    - |
        if [ "$TRAVIS_OS_NAME" = "linux" ]; then
            curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.13.0/protoc-3.13.0-linux-x86_64.zip
            unzip protoc-3.13.0-linux-x86_64.zip -d $HOME/.local
            export PATH="$PATH:$HOME/.local/bin"
        fi
    - |
        if [ "$TRAVIS_OS_NAME" = "linux" ]; then
            curl -LO http://launchpadlibrarian.net/494661083/fp-units-rtl-3.2.0_3.2.0+dfsg-8build2_amd64.deb
            sudo dpkg -i fp-units-rtl-3.2.0_3.2.0+dfsg-8build2_amd64.deb
            curl -LO http://launchpadlibrarian.net/494661053/fp-compiler-3.2.0_3.2.0+dfsg-8build2_amd64.deb
            sudo dpkg -i fp-compiler-3.2.0_3.2.0+dfsg-8build2_amd64.deb
        fi
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install pwsh; fi
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install freepascal; fi
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install protoc; fi
    # Path refresh command based on https://travis-ci.community/t/windows-builds-refreshenv-command-not-found/5803/5
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then eval $(powershell -NonInteractive -Command 'write("export PATH=`"" + ([Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [Environment]::GetEnvironmentVariable("PATH","User")).replace("\","/").replace("C:","/c").replace(";",":") + ":`$PATH`"")'); fi

stages:
    - name: release test
      if: type != pull_request AND branch = master
    - name: publish
      if: type != pull_request AND branch = master
    - name: development test
      if: type = pull_request OR branch != master

jobs:
    include:
        -   stage: release test
            name: Release test on Linux
            os: linux
            script:
                - pwsh -Command "./script/travis-ci-test.ps1 -StableKey build-${TRAVIS_BUILD_NUMBER}-${TRAVIS_OS_NAME}-stable -Bucket (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_BUCKET}) -ApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_API_KEY})"
        -   os: osx
            name: Release test on macOS
            script:
                - pwsh -Command "./script/travis-ci-test.ps1 -StableKey build-${TRAVIS_BUILD_NUMBER}-${TRAVIS_OS_NAME}-stable -Bucket (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_BUCKET}) -ApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_API_KEY})"
        -   stage: publish
            name: Check release test results on Linux
            os: linux
            script:
                - pwsh -Command "./script/travis-ci-check-stable.ps1 -StableKey build-${TRAVIS_BUILD_NUMBER}-${TRAVIS_OS_NAME}-stable -Bucket (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_BUCKET}) -ApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_API_KEY})"
        -   name: Check release test results on macOS
            os: osx
            script:
                - pwsh -Command "./script/travis-ci-check-stable.ps1 -StableKey build-${TRAVIS_BUILD_NUMBER}-${TRAVIS_OS_NAME}-stable -Bucket (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_BUCKET}) -ApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_API_KEY})"
        -   name: Deploy
            script:
                - pwsh -Command "./script/travis-ci-deploy.ps1 -StableKey build-${TRAVIS_BUILD_NUMBER}-${TRAVIS_OS_NAME}-stable -Bucket (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_BUCKET}) -ThisDbApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${THISDB_API_KEY}) -NuGetOrgApiKey (ConvertTo-SecureString -AsPlainText -Force -String ${NUGET_ORG_API_KEY})"
        -   stage: development test
            name: Development test on Linux
            os: linux
            script:
                - pwsh -Command "./script/travis-ci-test-pull-request.ps1"
        -   name: Development test on macOS
            os: osx
            script:
                - pwsh -Command "./script/travis-ci-test-pull-request.ps1"
